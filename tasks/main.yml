---

# Uninstall old versions
# https://docs.docker.com/engine/install/debian/#uninstall-old-versions
- name: Ensure old Docker versions are removed.
  ansible.builtin.apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
    update_cache: true

- name: Ensure old docker-compose is removed.
  ansible.builtin.file:
    path: /usr/local/bin/docker-compose
    state: absent

- name: Install apt key for Docker
  ansible.builtin.apt_key:
    state: present
    url: '{{ docker_apt_key_url }}'

- name: Install apt repository for Docker.
  ansible.builtin.apt_repository:
    filename: docker
    repo: '{{ docker_apt_repository }}'
    state: present
    update_cache: true

- name: Ensure Docker is installed.
  ansible.builtin.apt:
    name:
      -  docker-ce
      -  docker-ce-cli
      -  containerd.io
      -  docker-compose-plugin
    state: latest
    update_cache: true
  notify: restart docker

- name: Ensure the docker group exists.
  ansible.builtin.group:
    name: docker
    state: present

- name: Get docker group info using getent.
  getent:
    database: group
    key: docker
    split: ':'
  when: docker_users | length > 0

- name: Check if there are any users to add to the docker group.
  set_fact:
    at_least_one_user_to_modify: true
  when:
    - docker_users | length > 0
    - item not in ansible_facts.getent_group["docker"][2]
  with_items: "{{ docker_users }}"

- name: Ensure docker users are added to the docker group.
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"
  when: at_least_one_user_to_modify is defined

- name: Ensure the docker service is started and enabled at boot.
  ansible.builtin.systemd:
    name: docker.service
    state: started
    enabled: true

- name: Ensure the containerd service is started and enabled at boot.
  ansible.builtin.systemd:
    name: containerd.service
    state: started
    enabled: true
